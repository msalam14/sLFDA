% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SkewedFDA.R
\name{LocLogLikSN}
\alias{LocLogLikSN}
\title{Skew-normal log-likelihood calculation}
\usage{
LocLogLikSN(par, t, Tij, Y, meanX, scaleX, kernel, h, penalty = penAZs)
}
\arguments{
\item{par}{is a vector of parameters; the last element must be the shape parameter, and all the previous are for for local approximations of mean and scale, respectively}

\item{t}{is a scalar where log-likelihood would be calculated}

\item{Tij}{is a vector of observed time points stacked for all subjects}

\item{Y}{is a vector of data corresponding to the time points Tij}

\item{meanX}{represents design matrix for local approximation of mean and covariate dependency}

\item{scaleX}{represents design matrix for local approximation of scale}

\item{kernel}{is a kernel function that calculates weights}

\item{h}{is a scalar for bandwidth of the given kernel function}

\item{penalty}{is a function that penalizes the shape parameter}
}
\value{
a scalar that represents the value of log-likelihood
}
\description{
Calculate the penalized local skew-normal log-likelihood function where both
mean and scale can be approximated by polynomials. This function needs to
apply for every functional grid separately when using in slfda.
}
\examples{
# This is an example of log-likelihood using local linear approximation
library(sn)
set.seed(125)
Y<-rsn(n=50,xi = 5.5,omega = 1,alpha = 0.3)
Tij<-round(sort(runif(50)),2)
t<-0.25
Xmat<-cbind(rep(1,50),(t-Tij))


LocLogLikSN(runif(5),t=t,Tij=Tij,Y=Y,meanX=Xmat,scaleX=Xmat,kernel=depan,h=0.12,penalty=Qpenalty)
}
