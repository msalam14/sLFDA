% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SkewedFDA.R
\name{predict_lfda}
\alias{predict_lfda}
\title{Make prediction for LFDA; it can perform both in and out sample predict}
\usage{
predict_lfda(
  lfdaOBJ,
  gridS = NULL,
  gTID = NULL,
  gridT = NULL,
  nfunDATA = NULL,
  nfunARG = NULL,
  nobsTIME = NULL,
  identical.ARG = TRUE
)
}
\arguments{
\item{lfdaOBJ}{fitted object fpcaLFDA}

\item{gridS}{is a vector of functional argument where trajectories will be predicted}

\item{gTID}{is the subject id for which the prediction will be made}

\item{gridT}{is a list of length equals length of gTID contains time points where prediction will be made for the subjects identified in gTID}

\item{nfunDATA}{a list of functional data observed for new subjects}

\item{nfunARG}{argument where functions for new subjects were observed}

\item{nobsTIME}{a list of time points; every element represents the observed time points for subjects in the nfunDATA}

\item{identical.ARG}{a logical scalar indicates whether observed functional grid for new subjects is same as the subjects used in the training the LFDA}
}
\value{
a list with following items
\itemize{
 \item PredFD : a list with predicted function for subjects
 \item Subjects : id of subjects (gTID)
 \item funARG : argument where trajectories were predicted (gridS)
 \item TimePoints : a list of time where prediction is (gridT)
 \item Sbasis : basis function estimated from marginal covariance
 \item TbasisOBJ : basis function for time-varying coefficients (out-sample only)
 \item TDCoef: predicted time dependent coefficient (in-sample only)
}
}
\description{
Perform prediction using the results from fpcaLFDA function
}
\examples{
# This an example of skewed longitudinal functional data where marginal
# is a skew-normal distribution
# Required function for Fourier basis and skew-normal distribution
library(fda)
library(sn)
library(mgcv)
# Population level functions
# Mean function
meanPF<-function(s,t){
  2.5+(3.15*s)+(4*t)+(2*s*t)
}

# Scale Function
sFUN<-function(s,t){
  require(mvtnorm)
  25*dmvnorm(c(s,t),mean = c(0,0),sigma=matrix(c(2.5,0.75,0.75,3.5),2,2))
}

# Shape Function

alFUN<-function(s){
  2e1*(exp(2*s)/(1+exp(2*s)))*sin(6*pi*s/4)
}

# Sbasis functions for $L^2[S]$
SFbasis<-list("sfourier1"=function(s){
  fourier(x=s,nbasis=5,period = 1)[,2]
},"sfourier2"=function(s){
  fourier(x=s,nbasis=5,period = 1)[,3]
},"sfourier3"=function(s){
  fourier(x=s,nbasis=5,period = 1)[,4]
})

# Basis functions for time-dependent coefficients

TBasis<-list(list("tb11" = function(T){fourier(x=T,nbasis=3,period=1)[,2]},
                  "tb12" = function(T){fourier(x=T,nbasis=3,period=1)[,3]}),
             list("tb21" = function(T){fourier(x=T,nbasis=5,period=1)[,4]},
                  "tb22" = function(T){fourier(x=T,nbasis=5,period=1)[,5]}),
             list("tb31" = function(T){fourier(x=T,nbasis=7,period=1)[,6]},
                  "tb32" = function(T){fourier(x=T,nbasis=7,period=1)[,7]})
)


# A set of regular grid in functional domain S
n_s<-51
ss<-seq(0,1,length.out = n_s)

# Eigen values for time-dependent coefficient $eta_{kl}$
tdcfV<-list(c(0.6,0.4),c(0.5,0.3),c(0.25,0.20))


# Variance parameters
sig2_S<-c(0.328,0.210,0.046)
sig2_E<-0.183


# Testing 
ntp<-20
tp<-matrix(seq(0,1,length.out = ntp+2)[-c(1,ntp+2)],ncol=1)

# Full process time grid
Tg<-seq(0,1,length.out=51)

## number of subjects
n<-25

# Selection of mi
mi<-sapply(1:n,sample,x=6:12,size = 1)

# Observed Time points
Tij<-lapply(seq_len(length(mi)), function(w){sort(sample(Tg,mi[w]))})

# Simulation of Skewed FD
gdata<-SNFData(argS = ss,TimePoint = Tij,Sbasis = SFbasis,Tbasis = TBasis,
               Eta = tdcfV,Sigma2K = sig2_S,Sigma2 = sig2_E,
               muF = meanPF,sclF = sFUN,alpF = alFUN)


# Fitting lfda model

lfda_fit<-fpcaLFDA(Y=do.call(rbind,gdata$Y), subject.index=rep(1:n,mi), 
                   visit.index=do.call(c,lapply(1:n, function(i){1:mi[i]})), 
                   obsT = do.call(c,Tij), funcArg = ss, numTEvalPoints = 51, 
                   newdata = NULL, fbps.knots = c(20, 10), fbps.p = 3, fbps.m = 2, 
                   mFPCA.pve = 0.95, mFPCA.knots = 20, mFPCA.p = 3, mFPCA.m = 2, 
                   mFPCA.npc = NULL, LongiModel.method = "fpca.sc", sFPCA.pve = 0.95, 
                   sFPCA.nbasis = 10, gam.method = "REML", gam.kT = 10)

# Prediction for at next time for all the subjects in the sample
set.seed(25)
nTij<-lapply(1:n, function(i){
  runif(1,max(Tij[[i]]),1)
})

lfda_ispred<-predict_lfda(lfdaOBJ=lfda_fit,gridS=NULL,gTID=NULL,
                          gridT=lapply(nTij,function(u){max(u)+0.2}),
                          nfunDATA=NULL,nfunARG=NULL,identical.ARG=TRUE)


# New functional data

nt<-5
set.seed(435)
nmi<-sample(4:8,nt,replace = TRUE)
nTij<-lapply(1:nt, function(u){sort(sample(Tg[1:20],nmi[u]))})

# Simulation of Skewed FD for 5 new subjects
ngdata<-SNFData(argS = ss,TimePoint = nTij,Sbasis = SFbasis,Tbasis = TBasis,
               Eta = tdcfV,Sigma2K = sig2_S,Sigma2 = sig2_E,
               muF = meanPF,sclF = sFUN,alpF = alFUN)

# Out-of-sample prediction by the fitted lfda object
lfda_ospred<-predict_lfda(lfdaOBJ=lfda_fit,gridS=NULL,
                          gridT=lapply(nTij,function(u){max(u)+0.2}),
                          nfunDATA=ngdata$Y,nfunARG=NULL,
                          nobsTIME = nTij,identical.ARG=TRUE)

}
