% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SkewedFDA.R
\name{skewedFDA}
\alias{skewedFDA}
\title{Longitudinal functional data analysis using sLFDA}
\usage{
skewedFDA(
  funDATA,
  funARG,
  obsTIME,
  ETGrid,
  DOP = 1,
  KernelF,
  h = 0.05,
  CV = FALSE,
  Hgrid = NULL,
  CVThresh = 0.05,
  PenaltyF = Qpenalty,
  plfGT = NULL,
  ES2knots = c(10, 10),
  ES2bs = c("ps", "ps"),
  ES2m = c(2, 2),
  ES2Esp = "REML",
  LPknots = c(25, 25),
  LPbs = c("ps", "ps"),
  LPm = c(2, 2),
  Cov2nbasis = c(20, 20),
  PVE = c(0.95, 0.95),
  Prediction = FALSE,
  PSid = NULL,
  PredGS = NULL,
  PredGT = NULL,
  CovDep = FALSE,
  DesignMat = NULL,
  CovDepStr = NULL,
  PredDesignMat = NULL
)
}
\arguments{
\item{funDATA}{is a list of functional data observed from different subjects}

\item{funARG}{functional arguments where the underlying function}

\item{obsTIME}{is a list of time points for subjects in the study}

\item{ETGrid}{is a vector of regularly spaced time points}

\item{DOP}{is a scalar represents degree of polynomial for local fitting for mean and scale function}

\item{KernelF}{is a character represents the name of the standard kernel to be used local linear maximum likelihood estimation}

\item{h}{the bandwidth for local MLE}

\item{CV}{is a logical scalar indicates whether step 1 bandwidth will be determined by cross-validation}

\item{Hgrid}{a numeric vector of bandwidth values for CV}

\item{CVThresh}{is a scalar represents the minimum increment for likelihood with change in bandwidth}

\item{PenaltyF}{is the penalty function for shape parameter of the skewnormal distribution}

\item{plfGT}{is a vector of time points, taking Cartesian products with funARG, yields grid for predicting mean and scale functions}

\item{ES2knots}{is a  numeric vector of length two represent the numbers of knots for functional and longitudinal domain required for smoothing at step 2 of the estimation}

\item{ES2bs}{is a vector of two strings represent names of basis functions in S and T}

\item{ES2m}{order of penalities to be used in step of PLF estimation}

\item{ES2Esp}{is a string represents the name of method to be used in step 2 for determining tuning parameter}

\item{LPknots}{is a numeric vector of length 2 represents the knots for tensor product smoothing of estimated W process in order to demean it}

\item{LPbs}{is a vector of 2 strings represents the names of basis to be used for tensor product smoothing of estimated W}

\item{LPm}{is a numeric vector of length 2 represents the order of the basis functions specified in LPbs}

\item{Cov2nbasis}{is a vector of length 2 represents number of basis functions for 2 applications of fpca.sc for deterimining varphi(s) and psi(t)}

\item{PVE}{is a vector of length 2 contains the percentage of variation explained required for two fpca applications}

\item{Prediction}{is a logical scalar indicates whether prediction needs to be make or not; prediction can be made for the subjects in the sample}

\item{PSid}{is a numeric vector of subject IDs for which prediction will be made}

\item{PredGS}{is a grid in S for prediction}

\item{PredGT}{is a list of times points where prediction will be made for different subjects specified in PSid}

\item{CovDep}{is a logical scalar that represents whether mean depends on covariates or not}

\item{DesignMat}{is a matrix of baseline covariate for subjects in the data}

\item{CovDepStr}{is a vecotr of length equals to the number of covariates.
Each element can be either 1 or 2; 1 represents coefficient depends on s only, 2 means
the coefficient depends on both s and t}

\item{PredDesignMat}{A list of design matrices for every subject for which the prediction would be made}
}
\value{
a list with following objects:
\itemize{
 \item funARG : a vector represents where the functions were observed
 \item obsTIME : a list of observed time points for different subjects
 \item EstParam : a data frame with number of columns equals to 5+number of covariates
 \item h : bandwidth of local MLE used in the estimation
 \item plfOBJ : fitted objects obtained by mgcv::gam at the 2nd stage of estimation
 \item LPMean : mean of the latent process used in the computation of marginal variance
 \item lpOBJ : fitted object to smooth the latent W process
 \item PLFGS : grid points in functional domain where population level functions were estimated
 \item PLFGT : grid points in time domain where population level functions were estimated
 \item SBasis : estimated basis function obtained from marginal covariance
 \item marMU : estimated mean obtained FPCA of marginal variance
 \item TBasis : estimated basis for time-dependent coefficients
 \item argTB : time points wehre TBasis were estimated
 \item xiMU : estimated means for every FPCA via PACE for time-dependent coefficients
 \item EtaKL : estimated eigenvalues for FPCA of every time-dependent coefficients
 \item Zeta : predicted scores related to time-dependent coefficients
 \item Sigma2K : estimated error variance obtained from FPCA of time-dependent coefficients
 \item Sigma2 : estimated error variance for measurement error
 \item PredFD : a list of predicted data; elements correspond to subjects
 \item PredGS : functional grid where prediction is made
 \item PredGT : a list of time points where prediction is made; number of
 elements is equal to the number of subjects for them prediction is made
 \item PredSUB : subjects id for them prediction is made
}
}
\description{
Analyze longitudinal functional data using skew-normal distribution for point-
wise variation according to the methodlogy proposed in Alam and Staicu(20xx).
}
\examples{
# This an example of skewed longitudinal functional data where marginal
# is a skew-normal distribution
# Required function for Fourier basis and skew-normal distribution
library(fda)
library(sn)
library(mgcv)
library(refund)
# Population level functions
# Mean function
meanPF<-function(s,t){
  2.5+(3.15*s)+(4*t)+(2*s*t)
}

# Scale Function
sFUN<-function(s,t){
  require(mvtnorm)
  25*dmvnorm(c(s,t),mean = c(0,0),sigma=matrix(c(2.5,0.75,0.75,3.5),2,2))
}

# Shape Function

alFUN<-function(s){
  2e1*(exp(2*s)/(1+exp(2*s)))*sin(6*pi*s/4)
}

# Sbasis functions for $L^2[S]$
SFbasis<-list("sfourier1"=function(s){
  fourier(x=s,nbasis=5,period = 1)[,2]
},"sfourier2"=function(s){
  fourier(x=s,nbasis=5,period = 1)[,3]
},"sfourier3"=function(s){
  fourier(x=s,nbasis=5,period = 1)[,4]
})

# Basis functions for time-dependent coefficients

TBasis<-list(list("tb11" = function(T){fourier(x=T,nbasis=3,period=1)[,2]},
                  "tb12" = function(T){fourier(x=T,nbasis=3,period=1)[,3]}),
             list("tb21" = function(T){fourier(x=T,nbasis=5,period=1)[,4]},
                  "tb22" = function(T){fourier(x=T,nbasis=5,period=1)[,5]}),
             list("tb31" = function(T){fourier(x=T,nbasis=7,period=1)[,6]},
                  "tb32" = function(T){fourier(x=T,nbasis=7,period=1)[,7]})
)


# A set of regular grid in functional domain S
n_s<-51
ss<-seq(0,1,length.out = n_s)

# Eigen values for time-dependent coefficient $eta_{kl}$
tdcfV<-list(c(0.6,0.4),c(0.5,0.3),c(0.25,0.20))


# Variance parameters
sig2_S<-c(0.328,0.210,0.046)
sig2_E<-0.183


# Testing
ntp<-20
tp<-matrix(seq(0,1,length.out = ntp+2)[-c(1,ntp+2)],ncol=1)

# Full process time grid
Tg<-seq(0,1,length.out=51)

## number of subjects
n<-25

# Selection of mi
mi<-sapply(1:n,sample,x=6:12,size = 1)

# Observed Time points
Tij<-lapply(seq_len(length(mi)), function(w){sort(sample(Tg,mi[w]))})

# Simulation of Skewed FD
gdata<-SNFData(argS = ss,TimePoint = Tij,Sbasis = SFbasis,Tbasis = TBasis,
               Eta = tdcfV,Sigma2K = sig2_S,Sigma2 = sig2_E,
               muF = meanPF,sclF = sFUN,alpF = alFUN)


# Fitting slfda model

slfda<-skewedFDA(funDATA=gdata$Y,funARG=ss,obsTIME=Tij,ETGrid=tp,DOP=1,KernelF=depan,CV=TRUE,Hgrid=seq(0.02,0.2,0.02),CVThresh = 0.05,PenaltyF=Qpenalty,plfGT=Tg,
                 ES2knots=c(15,10),ES2bs=c("ps","ps"),ES2m=c(2,2),ES2Esp="REML",
                 LPknots=c(25,25),LPbs=c("ps","ps"),LPm=c(2,2),
                 Cov2nbasis=c(20,20),PVE=c(0.95,0.90),
                 Prediction=FALSE,PSid=NULL,PredGS=NULL,PredGT=NULL,
                 CovDep=FALSE,DesignMat=NULL,CovDepStr=NULL,PredDesignMat=NULL)
}
