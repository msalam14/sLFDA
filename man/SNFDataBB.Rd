% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SkewedFDA.R
\name{SNFDataBB}
\alias{SNFDataBB}
\title{Longitudinal function data generation with skew-normal marginal using a bi-variate basis function}
\usage{
SNFDataBB(
  argS,
  TimePoint,
  STbasis,
  Sbasis,
  Eta,
  Sigma2K,
  Sigma2,
  muF,
  sclF,
  alpF
)
}
\arguments{
\item{argS}{is a numeric vector contains values of functional argument where the function will be sampled at a given time}

\item{TimePoint}{is a list of length n gives times points where functional data would have been observed for n subjects}

\item{STbasis}{list of length K that has bi-variate basis functions as its elements}

\item{Sbasis}{list of length K where each of the components is a basis function for smooth error}

\item{Eta}{is a list of length K where each of the components is a list of length L_k contains eigenvalues}

\item{Sigma2K}{is a vector of K variance parameters}

\item{Sigma2}{is the variance of iid random error}
}
\value{
It returns a list of set of objects
\itemize{
 \item n: number of subjects generated
 \item argS: values of $s_1, s_2,\ldots, s_p$ where the functions were observed
 \item Tij: observed time points for the subjects
 \item Y: a list of generated data; each element represents data for a subject
 \item PWvar: a list of point-wise variance used to generate from U process
 \item U: a list of generated U process; elements correspond to subjects
 \item W: a list of generated W process; elements correspond to subjects
}
}
\description{
Generates longitudinal functional data for n subjects following misspecified model introduced in Alam and Staicu (20xx) taking G_alpha to be a Skew-Normal distribution
}
\examples{
# This an example of skewed longitudinal functional data where marginal
# is a skew-normal distribution
# Required function for Fourier basis and skew-normal distribution
library(fda)
library(sn)
# Population level functions
# Mean function
meanPF<-function(s,t){
  2.5+(3.15*s)+(4*t)+(2*s*t)
}

# Scale Function
sFUN<-function(s,t){
  require(mvtnorm)
  25*dmvnorm(c(s,t),mean = c(0,0),sigma=matrix(c(2.5,0.75,0.75,3.5),2,2))
}

# Shape Function

alFUN<-function(s){
  2e1*(exp(2*s)/(1+exp(2*s)))*sin(6*pi*s/4)
}

# Bi-variate basis
STBasis<-list("stB1"=function(s,t){
  sapply(s, function(u){
    0.8578*sin(u^2+(0.5*t^2))
  })
},
"stB2"=function(s,t){
  sapply(s, function(u){
    (0.8721*sin((0.3*u^2)+(0.6*t^2)))-(0.2988*sin(u^2+(0.5*t^2)))
  })
})

# Marginal basis

SBasis<-list("sB1"=function(s){
  0.8578*sin(s^2)
},
"sB2"=function(s,t){
  (0.8721*sin(0.3*s^2))-(0.2988*sin(s^2))
})




# A set of regular grid in functional domain S
n_s<-51
ss<-seq(0,1,length.out = n_s)

# Eigen values for time-dependent coefficient $eta_{kl}$
tdcfV<-c(1.6,0.8)


# Variance parameters
sig2_S<-c(0.025,0.015)
sig2_E<-0.08


# Testing 
ntp<-20
tp<-matrix(seq(0,1,length.out = ntp+2)[-c(1,ntp+2)],ncol=1)

# Full process time grid
Tg<-seq(0,1,length.out=51)

## number of subjects
n<-2

# Selection of mi
mi<-sapply(1:n,sample,x=3:6,size = 1)

# Observed Time points
Tij<-lapply(seq_len(length(mi)), function(w){sort(sample(Tg,mi[w]))})

# Simulation of Skewed FD
gdata<-SNFDataBB(argS = ss,TimePoint = Tij,STbasis = STBasis,Sbasis = SBasis,
               Eta = tdcfV,Sigma2K = sig2_S,Sigma2 = sig2_E,
               muF = meanPF,sclF = sFUN,alpF = alFUN)
}
